/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.eulen.actividades.service.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.eulen.actividades.service.model.ActividadesEspeciales;
import com.eulen.actividades.service.model.ActividadesEspecialesModel;
import com.eulen.actividades.service.model.ActividadesEspecialesSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ActividadesEspeciales service. Represents a row in the &quot;EULEN_ActividadesEspeciales&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ActividadesEspecialesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ActividadesEspecialesImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ActividadesEspecialesImpl
 * @see ActividadesEspeciales
 * @see ActividadesEspecialesModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class ActividadesEspecialesModelImpl extends BaseModelImpl<ActividadesEspeciales>
	implements ActividadesEspecialesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a actividades especiales model instance should use the {@link ActividadesEspeciales} interface instead.
	 */
	public static final String TABLE_NAME = "EULEN_ActividadesEspeciales";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "actividadId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "text_", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("actividadId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("text_", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table EULEN_ActividadesEspeciales (uuid_ VARCHAR(75) null,actividadId LONG not null primary key,groupId LONG,userId LONG,createDate DATE null,text_ VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table EULEN_ActividadesEspeciales";
	public static final String ORDER_BY_JPQL = " ORDER BY actividadesEspeciales.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY EULEN_ActividadesEspeciales.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.eulen.ot.actividadesespeciales.actividadesEspecialesService.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.eulen.actividades.service.model.ActividadesEspeciales"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.eulen.ot.actividadesespeciales.actividadesEspecialesService.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.eulen.actividades.service.model.ActividadesEspeciales"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.eulen.ot.actividadesespeciales.actividadesEspecialesService.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.eulen.actividades.service.model.ActividadesEspeciales"),
			true);
	public static final long GROUPID_COLUMN_BITMASK = 1L;
	public static final long UUID_COLUMN_BITMASK = 2L;
	public static final long CREATEDATE_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ActividadesEspeciales toModel(
		ActividadesEspecialesSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ActividadesEspeciales model = new ActividadesEspecialesImpl();

		model.setUuid(soapModel.getUuid());
		model.setActividadId(soapModel.getActividadId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setText(soapModel.getText());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ActividadesEspeciales> toModels(
		ActividadesEspecialesSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ActividadesEspeciales> models = new ArrayList<ActividadesEspeciales>(soapModels.length);

		for (ActividadesEspecialesSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.eulen.ot.actividadesespeciales.actividadesEspecialesService.service.util.ServiceProps.get(
				"lock.expiration.time.com.eulen.actividades.service.model.ActividadesEspeciales"));

	public ActividadesEspecialesModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _actividadId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setActividadId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _actividadId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ActividadesEspeciales.class;
	}

	@Override
	public String getModelClassName() {
		return ActividadesEspeciales.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("actividadId", getActividadId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("text", getText());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long actividadId = (Long)attributes.get("actividadId");

		if (actividadId != null) {
			setActividadId(actividadId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		String text = (String)attributes.get("text");

		if (text != null) {
			setText(text);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getActividadId() {
		return _actividadId;
	}

	@Override
	public void setActividadId(long actividadId) {
		_actividadId = actividadId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public String getText() {
		if (_text == null) {
			return "";
		}
		else {
			return _text;
		}
	}

	@Override
	public void setText(String text) {
		_text = text;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ActividadesEspeciales.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ActividadesEspeciales toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ActividadesEspeciales)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ActividadesEspecialesImpl actividadesEspecialesImpl = new ActividadesEspecialesImpl();

		actividadesEspecialesImpl.setUuid(getUuid());
		actividadesEspecialesImpl.setActividadId(getActividadId());
		actividadesEspecialesImpl.setGroupId(getGroupId());
		actividadesEspecialesImpl.setUserId(getUserId());
		actividadesEspecialesImpl.setCreateDate(getCreateDate());
		actividadesEspecialesImpl.setText(getText());

		actividadesEspecialesImpl.resetOriginalValues();

		return actividadesEspecialesImpl;
	}

	@Override
	public int compareTo(ActividadesEspeciales actividadesEspeciales) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				actividadesEspeciales.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ActividadesEspeciales)) {
			return false;
		}

		ActividadesEspeciales actividadesEspeciales = (ActividadesEspeciales)obj;

		long primaryKey = actividadesEspeciales.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ActividadesEspecialesModelImpl actividadesEspecialesModelImpl = this;

		actividadesEspecialesModelImpl._originalUuid = actividadesEspecialesModelImpl._uuid;

		actividadesEspecialesModelImpl._originalGroupId = actividadesEspecialesModelImpl._groupId;

		actividadesEspecialesModelImpl._setOriginalGroupId = false;

		actividadesEspecialesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ActividadesEspeciales> toCacheModel() {
		ActividadesEspecialesCacheModel actividadesEspecialesCacheModel = new ActividadesEspecialesCacheModel();

		actividadesEspecialesCacheModel.uuid = getUuid();

		String uuid = actividadesEspecialesCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			actividadesEspecialesCacheModel.uuid = null;
		}

		actividadesEspecialesCacheModel.actividadId = getActividadId();

		actividadesEspecialesCacheModel.groupId = getGroupId();

		actividadesEspecialesCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			actividadesEspecialesCacheModel.createDate = createDate.getTime();
		}
		else {
			actividadesEspecialesCacheModel.createDate = Long.MIN_VALUE;
		}

		actividadesEspecialesCacheModel.text = getText();

		String text = actividadesEspecialesCacheModel.text;

		if ((text != null) && (text.length() == 0)) {
			actividadesEspecialesCacheModel.text = null;
		}

		return actividadesEspecialesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", actividadId=");
		sb.append(getActividadId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", text=");
		sb.append(getText());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.eulen.actividades.service.model.ActividadesEspeciales");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actividadId</column-name><column-value><![CDATA[");
		sb.append(getActividadId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>text</column-name><column-value><![CDATA[");
		sb.append(getText());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ActividadesEspeciales.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ActividadesEspeciales.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _actividadId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private Date _createDate;
	private String _text;
	private long _columnBitmask;
	private ActividadesEspeciales _escapedModel;
}